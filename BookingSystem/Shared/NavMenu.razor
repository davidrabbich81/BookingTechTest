@inject IJSRuntime JSRunTime;



<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DJ Valeting</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                <span class="oi oi-person" aria-hidden="true"></span> Login
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="booking">
                <span class="oi oi-plus" aria-hidden="true"></span> Make booking
            </NavLink>
        </div>
        <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="bookings">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Bookings
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="SignOut">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Log out
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
        </CascadingAuthenticationState>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task SignOut()
    {
        var authModule = await JSRunTime.InvokeAsync<IJSObjectReference>("import", "./js/Authentication.js");
        await authModule.InvokeVoidAsync("SignOut", "/");
    }
}
